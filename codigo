// Inclui as bibliotecas
#include <LiquidCrystal_I2C.h>
#include <Wire.h>
#include <Servo.h>
#include <Stepper.h>

// Define o endereço LCD para 0x27 para um display de 16 caracteres e 2 linhas
LiquidCrystal_I2C lcd(0x27, 20, 4);

// Define a entrada analógica do sensor de solo com o valor "0"
#define SENSOR_SOLO A0
// Define que o pino digital do buzzer é o “52”
#define PINO_BUZZER 52

// Pinos do motor de passo
#define MOTOR_PIN1 8
#define MOTOR_PIN2 9
#define MOTOR_PIN3 10
#define MOTOR_PIN4 11

// Pino digital onde está conectado o servo
#define SERVOPIN 3

// Nomeando o servo
Servo SRV;

// Armazena a posição do servo
int pos = 0;

// Configuração do motor de passo
const int passosPorRev = 2048;  // Número de passos por revolução do motor
Stepper motor(passosPorRev, MOTOR_PIN1, MOTOR_PIN3, MOTOR_PIN2, MOTOR_PIN4);

// Função setup é executada apenas uma vez
void setup()
{
  // Inicia a comunicação serial a 9600 bits por segundo
  Serial.begin(9600); 
  // Configuração do pino como saída
  pinMode(PINO_BUZZER, OUTPUT);
  // Configuração do pino como entrada
  pinMode(SENSOR_SOLO, INPUT);

  // Porta onde o servo está conectado
  SRV.attach(SERVOPIN);

  // Inicializa o LCD
  lcd.init();
  // Liga a luz de fundo
  lcd.backlight();
  // Posição do cursor
  lcd.setCursor(1, 0);
}

// Função loop é para executar repetidamente o código
void loop()
{
  // Leitura do sensor de solo
  int LeituraSensor = analogRead(SENSOR_SOLO);

  // No estado seco
  if (LeituraSensor >= 1000) {
    digitalWrite(PINO_BUZZER, LOW); 
    lcd.print("Status: seco");

    // No estado úmido
  } else {
    digitalWrite(PINO_BUZZER, HIGH);
    lcd.print("Status: úmido");

    // Girar o servo para 180 graus
    SRV.write(180);
    delay(1000);

    // Retornar o servo para 0 grau
    SRV.write(0);
    delay(1000);

    // Girar o motor de passo em uma volta completa (sentido horário)
    motor.setSpeed(500); // Define a velocidade do motor (ajuste conforme necessário)
    motor.step(passosPorRev); // Gira o motor de passo em uma volta completa
    delay(1000);

    // Girar o motor de passo em uma volta completa (sentido anti-horário)
    motor.setSpeed(500); // Define a velocidade do motor (ajuste conforme necessário)
    motor.step(-passosPorRev); // Gira o motor de passo em uma volta completa no sentido anti-horário
    delay(1000);
  }

  // Aguarda 1000 milissegundos
  delay(1000);
}
